name: Build
on:
  push:
    branches:
      - '*'
  pull_request:
    types: [opened, reopened, synchronize]

env:
  TS_NODE_TRANSPILE_ONLY: 1
  FORCE_COLORS: 1

# todo: extract shared seto/checkout/install/compile, instead of repeat in each job.
jobs:

  test:
    runs-on: ubuntu-latest
    services:
      localgeth:
        image: ethereum/client-go:release-1.10
        options: >-
          --verbosity 1
          --http.vhosts '*,localhost,host.docker.internal'
          --http
          --http.api personal,eth,net,web3,debug
          --http.corsdomain '*'
          --http.addr "0.0.0.0"
          --nodiscover --maxpeers 0 --mine
          --networkid 1337
          --dev
          --allow-insecure-unlock
          --rpc.allow-unprotected-txs
          --dev.gaslimit 20000000

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install
      - run: yarn compile

      - run: yarn run ci

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install
      - run: yarn lint

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install

      - run: yarn compile

      - run: FORCE_COLOR=1 yarn coverage
      - uses: actions/upload-artifact@v2
        with:
          name: solidity-coverage
          path: |
            coverage/
            coverage.json

